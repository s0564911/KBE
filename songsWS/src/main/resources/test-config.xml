<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!--  explicit support for annotation-driven MVC controllers
         e.g., @RequestMapping, @Controller -->
    <mvc:annotation-driven/>

    <!-- enable auto scanning feature:
         base-package: package, wo sich die Controller befinden.
         Spring wird dieses Vezeichnis scannen und die Beans,
         die, z.B., mit @RestController annotiert sind, finden und registrieren. -->
    <context:component-scan base-package="de.htwb.ai.kbe"/>

<!--        database connection source -->
    <bean id="testDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbc.JDBCDriver"/>
        <property name="url" value="jdbc:hsqldb:file:testDataSource;sql.syntax_mys=true"/>
        <property name="username" value="SA"/>
        <property name="password" value=""/>
    </bean>

    <!--    hibernate session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="dataSource" ref="testDataSource"/>
        <property name="packagesToScan" value="de.htwb.ai.kbe"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
<!--                <prop key="hibernate.dialect.storage_engine">org.hibernate.dialect.InnoDBStorageEngine</prop>-->
                <prop key="connection.autocommit">true</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                <prop key="hibernate.jdbc.lob.non_contextual_creation">false</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.lazy">false</prop>
                <prop key="hibernate.pretty">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
<!--                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>-->
                <prop key="current_session_context_class">thread</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
<!--                <prop key="hibernate.hbm2ddl.import_files">sql/insert-test-data.sql</prop>-->
            </props>
        </property>
    </bean>

<!--    <jdbc:embedded-database id="embedded" type="HSQL"/>-->
<!--    <jdbc:initialize-database data-source="testDataSource">-->
<!--        <jdbc:script location="classpath:sql/create-test-db.sql"/>-->
<!--        <jdbc:script location="classpath:sql/insert-test-data.sql"/>-->
<!--    </jdbc:initialize-database>-->

    <!--    hibernate transaction manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
<!--        handles transactions in Service-->
    <tx:annotation-driven/>

    <!-- jackson: -->
    <bean id="jsonMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
</beans>
